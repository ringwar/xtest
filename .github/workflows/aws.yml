on:
  push:
    brnaches:
      - xdev-release

name: Deploy to Amazon ECS

jobs:
  tests:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     # shell: bash
    #     working-directory: ~/xserver
    container: circleci/python:3.7.5

    steps:
      - name: Setup file system permissions
        run: sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/xtest/
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache dependency
        uses: actions/cache@v2
        with:
          path: ./env
          key: deps-${{ hashFiles('**/requirements.txt') }}

      - name: install dependencies
        run: |
          python3 -m venv env
          . env/bin/activate
          pip install -r requirements.txt
      - name: run tests
        run: |
          . env/bin/activate
          python manage.py test

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    container: circleci/python:3.7.5

    steps:
      - name: Setup file system permissions
        run: sudo chmod -R 777 $GITHUB_WORKSPACE /github /__w/xtest/
      - name: checkout
        uses: actions/checkout@v2

      - name: Cache dependency
        uses: actions/cache@v2
        with:
          path: ./env
          key: deps-${{ hashFiles('**/requirements.txt') }}

      - name: install dependencies
        run: |
          python3 -m venv env
          . env/bin/activate
          pip install -r requirements.txt
      - name: AWS Deployment
        id: build-image
        run: |
          . env/bin/activate
          `aws ecr get-login --no-include-email --region ap-northeast-2`
          aws configure set default.region ap-northeast-2
          docker build -t x-server-gunicorn .
          docker build -t x-server-nginx ./nginx
          docker tag x-server-gunicorn:latest 986937772248.dkr.ecr.ap-northeast-2.amazonaws.com/x-server:dev-gunicorn-latest
          docker tag x-server-nginx:latest 986937772248.dkr.ecr.ap-northeast-2.amazonaws.com/x-server:dev-nginx-latest
          docker push 986937772248.dkr.ecr.ap-northeast-2.amazonaws.com/x-server:dev-gunicorn-latest
          docker push 986937772248.dkr.ecr.ap-northeast-2.amazonaws.com/x-server:dev-nginx-latest
          aws ecs register-task-definition --cli-input-json file://`pwd`/deployments/ecs-dev.json
          aws ecs update-service --cli-input-json file://`pwd`/deployments/service-dev.json
          # TASKARN=`aws ecs list-tasks --cluster x-server-dev --output json | grep arn: | cut -d "\"" -f2 | tr -d "\n \t"`
          echo "::set-output name=TASKARN::`aws ecs list-tasks --cluster x-server-dev --output json | grep arn: | cut -d "\"" -f2 | tr -d "\n \t"`"
      - name: ECS stop
        # uses: aws-actions/amazon-ecs-render-task-definition@v1
        run: |
          aws ecs stop-task --cluster x-server-dev --task ${{ steps.build-imageoutputs.TASKARN }}
      # - name: ECS task definition
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #     INSTANCEARN=`aws ecs list-container-instances --cluster x-server-dev --output json| grep arn: | cut -d "\"" -f2 | tr -d "\n \t"`
      #     aws ecs start-task --cluster x-server-dev --task-definition x-server-dev --container-instances ${{INSTANCEARN}}
